#!/bin/bash

# Check if the name argument is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <name>"
    exit 1
fi

# Get the name from the command line argument
name=$1

# Create a folder with the given name
mkdir "$name"

# Change into the created folder
cd "$name" || exit

# Create subdirectories
mkdir loot
mkdir tools
mkdir flags
mkdir hashes
mkdir logs
mkdir access
mkdir scans
mkdir exploits

# Enumeration
mkdir -p enum/{external,internal}

# Create placeholders
touch enum/external/80-http.md
touch enum/external/445-smb.md


# Touch files
touch "$name".md
touch Exploit.md
touch users.txt
touch passwords.txt
touch ntlm.txt
touch user_ntlm.txt
touch user_pass.txt
touch hashes.txt

# Names (Fill with employee names)
touch names.txt

# Create screenshot and template dirs
mkdir _screenshots
mkdir _templates
mkdir .obsidian


# Setup obsidian templates and files directory
echo '{"folder": "_templates"}' | jq . > .obsidian/templates.json
echo '{"attachmentFolderPath": "_screenshots"}' | jq . > .obsidian/app.json 

# copy template(s)
cp ~/dev/oscp-scripts/templates/* _templates

# copy proxychains config
cp /etc/proxychains4.conf proxychains.conf && sed -i 's/socks4/socks5/g' proxychains.conf && sed -i 's/9050/1080/g' proxychains.conf

# Generate scripts
echo '#!/bin/bash' > access/shell.sh && chmod +x access/shell.sh  


echo "Folder structure created for '$name':"
echo "- $name/"
find .

termlog recon

